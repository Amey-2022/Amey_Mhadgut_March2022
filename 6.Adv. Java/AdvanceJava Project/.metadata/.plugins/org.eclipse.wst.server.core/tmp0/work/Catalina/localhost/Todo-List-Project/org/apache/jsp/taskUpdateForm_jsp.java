/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-07-08 17:54:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.todo.app.dto.Todo;

public final class taskUpdateForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar", Long.valueOf(1657301752437L));
    _jspx_dependants.put("jar:file:/G:/CDACM2022/SRC-Module-6/AdvanceJava%20Project/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Todo-List-Project/WEB-INF/lib/spring-webmvc-4.3.20.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1539572356000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.todo.app.dto.Todo");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftodo_005fform_0026_005fmethod_005fcommandName_005fclass_005faction;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftodo_005ftextarea_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fmin_005fmax_005fclass_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ftodo_005fhidden_0026_005fpath_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ftodo_005fform_0026_005fmethod_005fcommandName_005fclass_005faction = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftodo_005ftextarea_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fmin_005fmax_005fclass_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ftodo_005fhidden_0026_005fpath_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ftodo_005fform_0026_005fmethod_005fcommandName_005fclass_005faction.release();
    _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.release();
    _005fjspx_005ftagPool_005ftodo_005ftextarea_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.release();
    _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fmin_005fmax_005fclass_005fnobody.release();
    _005fjspx_005ftagPool_005ftodo_005fhidden_0026_005fpath_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("            \n");
      out.write("      \n");


response.setHeader("Cache-Control","no-cache");
response.setHeader("Cache-Control","no-store");
response.setHeader("Pragma","no-cache");
response.setDateHeader ("Expires", 0);
    if(session.getAttribute("user")==null){
    response.sendRedirect(request.getContextPath() + "/index.jsp");

}

      out.write("\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("    <!-- Tell the browser to be responsive to screen width -->\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("    <meta name=\"description\" content=\"\">\n");
      out.write("    <meta name=\"author\" content=\"\">\n");
      out.write("    <!-- Favicon icon -->\n");
      out.write("    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"assets/images/favicon.png\">\n");
      out.write("    <title>task update form</title>\n");
      out.write("    <!-- Bootstrap Core CSS -->\n");
      out.write("    <link href=\"assets/plugins/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <!-- Custom CSS -->\n");
      out.write("    <link href=\"css/style.css\" rel=\"stylesheet\">\n");
      out.write("    <!-- You can change the theme colors from here -->\n");
      out.write("    <link href=\"css/colors/blue.css\" id=\"theme\" rel=\"stylesheet\">\n");
      out.write("    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n");
      out.write("    <!--[if lt IE 9]>\n");
      out.write("    <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n");
      out.write("    <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\n");
      out.write("<![endif]-->\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body class=\"fix-header card-no-border\">\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <!-- Preloader - style you can find in spinners.css -->\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <div class=\"preloader\">\n");
      out.write("        <svg class=\"circular\" viewBox=\"25 25 50 50\">\n");
      out.write("            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\" /> </svg>\n");
      out.write("    </div>\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <!-- Main wrapper - style you can find in pages.scss -->\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <div id=\"main-wrapper\">\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- Topbar header - style you can find in pages.scss -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <header class=\"topbar\">\n");
      out.write("            <nav class=\"navbar top-navbar navbar-toggleable-sm navbar-light\">\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- Logo -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <div class=\"navbar-header\">\n");
      out.write("                    <a class=\"navbar-brand\" href=\"index.html\">\n");
      out.write("                        <!-- Logo icon -->\n");
      out.write("                        <b>\n");
      out.write("                            <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n");
      out.write("                            <!-- Dark Logo icon -->\n");
      out.write("                            <img src=\"image/logo.png\" alt=\"homepage\" width=\"200\" class=\"dark-logo\" />\n");
      out.write("                            \n");
      out.write("                        </b>\n");
      out.write("                        <!--End Logo icon -->\n");
      out.write("                        <!-- Logo text -->\n");
      out.write("                        <span>\n");
      out.write("                            <!-- dark Logo text -->\n");
      out.write("                        </span>\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- End Logo -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <div class=\"navbar-collapse\">\n");
      out.write("                    <!-- ============================================================== -->\n");
      out.write("                    <!-- toggle and nav items -->\n");
      out.write("                    <!-- ============================================================== -->\n");
      out.write("                    <ul class=\"navbar-nav mr-auto mt-md-0 \">\n");
      out.write("                        <!-- This is  -->\n");
      out.write("                        <li class=\"nav-item\"> <a class=\"nav-link nav-toggler hidden-md-up text-muted waves-effect waves-dark\" href=\"javascript:void(0)\"><i class=\"ti-menu\"></i></a> </li>\n");
      out.write("                        \n");
      out.write("                    </ul>\n");
      out.write("                    <!-- ============================================================== -->\n");
      out.write("                    <!-- User profile and search -->\n");
      out.write("                    <!-- ============================================================== -->\n");
      out.write("                        <ul class=\"navbar-nav my-lg-0\">\n");
      out.write("                        <li class=\"nav-item dropdown\">\n");
      out.write("         						<a class=\"btn btn-primary\" href=\"logout.app\">logout</a></li>\n");
      out.write("                        \n");
      out.write("                        </li>\n");
      out.write("                    </ul>\n");
      out.write("                </div>\n");
      out.write("            </nav>\n");
      out.write("        </header>\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- End Topbar header -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- Left Sidebar - style you can find in sidebar.scss  -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <aside class=\"left-sidebar\">\n");
      out.write("            <!-- Sidebar scroll-->\n");
      out.write("            <div class=\"scroll-sidebar\">\n");
      out.write("                <!-- Sidebar navigation-->\n");
      out.write("                <nav class=\"sidebar-nav\">\n");
      out.write("                    <ul id=\"sidebarnav\">\n");
      out.write("                        <li>\n");
      out.write("                            <a href=\"backToDashboard.app\" class=\"waves-effect\"><i class=\"fa fa-clock-o m-r-10\" aria-hidden=\"true\"></i>Dashboard</a>\n");
      out.write("                        </li>\n");
      out.write("                        <li>\n");
      out.write("                            <a href=\"userProfile.app\" class=\"waves-effect\"><i class=\"fa fa-user m-r-10\" aria-hidden=\"true\"></i>Profile</a>\n");
      out.write("                        </li>\n");
      out.write("                       \n");
      out.write("                    </ul>\n");
      out.write("                  \n");
      out.write("                </nav>\n");
      out.write("                <!-- End Sidebar navigation -->\n");
      out.write("            </div>\n");
      out.write("            <!-- End Sidebar scroll-->\n");
      out.write("        </aside>\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- End Left Sidebar - style you can find in sidebar.scss  -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- Page wrapper  -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <div class=\"page-wrapper\">\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("            <!-- Container fluid  -->\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("            <div class=\"container-fluid\">\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- Bread crumb and right sidebar toggle -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <div class=\"row page-titles\">\n");
      out.write("                    <div class=\"col-md-6 col-8 align-self-center\">\n");
      out.write("                        <h3 class=\"text-themecolor m-b-0 m-t-0\">Update</h3>\n");
      out.write("                        <ol class=\"breadcrumb\">\n");
      out.write("                            <li class=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Home</a></li>\n");
      out.write("                            <li class=\"breadcrumb-item active\">Task-Update</li>\n");
      out.write("                        </ol>\n");
      out.write("                    </div>\n");
      out.write("                    \n");
      out.write("                </div>\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- End Bread crumb and right sidebar toggle -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- Start Page Content -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- Row -->\n");
      out.write("                    <!-- Column -->\n");
      out.write("                    <!-- Column -->\n");
      out.write("                    <div class=\"col-lg-8 col-xlg-9 col-md-7\">\n");
      out.write("                        <div class=\"card\">\n");
      out.write("                            <div class=\"card-block\">\n");
      out.write("                          \n");
      out.write("                                ");
      if (_jspx_meth_todo_005fform_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <!-- Column -->\n");
      out.write("                </div>\n");
      out.write("                <!-- Row -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("                <!-- End PAge Content -->\n");
      out.write("                <!-- ============================================================== -->\n");
      out.write("            </div>\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("            <!-- End Container fluid  -->\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("            <!-- footer -->\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("            <footer class=\"footer text-center\">\n");
      out.write("                © 2017 Todo List            </footer>\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("            <!-- End footer -->\n");
      out.write("            <!-- ============================================================== -->\n");
      out.write("        </div>\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("        <!-- End Page wrapper  -->\n");
      out.write("        <!-- ============================================================== -->\n");
      out.write("    </div>\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <!-- End Wrapper -->\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <!-- All Jquery -->\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <script src=\"assets/plugins/jquery/jquery.min.js\"></script>\n");
      out.write("    <!-- Bootstrap tether Core JavaScript -->\n");
      out.write("    <script src=\"assets/plugins/bootstrap/js/tether.min.js\"></script>\n");
      out.write("    <script src=\"assets/plugins/bootstrap/js/bootstrap.min.js\"></script>\n");
      out.write("    <!-- slimscrollbar scrollbar JavaScript -->\n");
      out.write("    <script src=\"js/jquery.slimscroll.js\"></script>\n");
      out.write("    <!--Wave Effects -->\n");
      out.write("    <script src=\"js/waves.js\"></script>\n");
      out.write("    <!--Menu sidebar -->\n");
      out.write("    <script src=\"js/sidebarmenu.js\"></script>\n");
      out.write("    <!--stickey kit -->\n");
      out.write("    <script src=\"assets/plugins/sticky-kit-master/dist/sticky-kit.min.js\"></script>\n");
      out.write("    <!--Custom JavaScript -->\n");
      out.write("    <script src=\"js/custom.min.js\"></script>\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <!-- Style switcher -->\n");
      out.write("    <!-- ============================================================== -->\n");
      out.write("    <script src=\"assets/plugins/styleswitcher/jQuery.style.switcher.js\"></script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_todo_005fform_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  todo:form
    org.springframework.web.servlet.tags.form.FormTag _jspx_th_todo_005fform_005f0 = (org.springframework.web.servlet.tags.form.FormTag) _005fjspx_005ftagPool_005ftodo_005fform_0026_005fmethod_005fcommandName_005fclass_005faction.get(org.springframework.web.servlet.tags.form.FormTag.class);
    boolean _jspx_th_todo_005fform_005f0_reused = false;
    try {
      _jspx_th_todo_005fform_005f0.setPageContext(_jspx_page_context);
      _jspx_th_todo_005fform_005f0.setParent(null);
      // /taskUpdateForm.jsp(163,32) null
      _jspx_th_todo_005fform_005f0.setDynamicAttribute(null, "class", "form-horizontal form-material");
      // /taskUpdateForm.jsp(163,32) name = action type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005fform_005f0.setAction("updateTask.app");
      // /taskUpdateForm.jsp(163,32) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005fform_005f0.setMethod("post");
      // /taskUpdateForm.jsp(163,32) name = commandName type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005fform_005f0.setCommandName("todo");
      int[] _jspx_push_body_count_todo_005fform_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_todo_005fform_005f0 = _jspx_th_todo_005fform_005f0.doStartTag();
        if (_jspx_eval_todo_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                                    <div class=\"form-group\">\n");
            out.write("                                        <label class=\"col-md-12\">Title</label>\n");
            out.write("                                        <div class=\"col-md-12\">\n");
            out.write("                                            ");
            if (_jspx_meth_todo_005finput_005f0(_jspx_th_todo_005fform_005f0, _jspx_page_context, _jspx_push_body_count_todo_005fform_005f0))
              return true;
            out.write("\n");
            out.write("                                        </div>\n");
            out.write("                                    </div>\n");
            out.write("                                    <div class=\"form-group\">\n");
            out.write("                                        <label for=\"Description\" class=\"col-md-12\">Description</label>\n");
            out.write("                                        <div class=\"col-md-12\">\n");
            out.write("                                            ");
            if (_jspx_meth_todo_005ftextarea_005f0(_jspx_th_todo_005fform_005f0, _jspx_page_context, _jspx_push_body_count_todo_005fform_005f0))
              return true;
            out.write("\n");
            out.write("                                        </div>\n");
            out.write("                                    </div>\n");
            out.write("                                    <div class=\"form-group\">\n");
            out.write("                                        <label class=\"col-md-12\">Target Date</label>\n");
            out.write("                                        <div class=\"col-md-12\">\n");
            out.write("                                            ");
            if (_jspx_meth_todo_005finput_005f1(_jspx_th_todo_005fform_005f0, _jspx_page_context, _jspx_push_body_count_todo_005fform_005f0))
              return true;
            out.write("\n");
            out.write("                                        </div>\n");
            out.write("                                    </div>\n");
            out.write("                                    <div class=\"form-group\">\n");
            out.write("                                        <label class=\"col-md-12\">Comment</label>\n");
            out.write("                                        <div class=\"col-md-12\">\n");
            out.write("                                            ");
            if (_jspx_meth_todo_005ftextarea_005f1(_jspx_th_todo_005fform_005f0, _jspx_page_context, _jspx_push_body_count_todo_005fform_005f0))
              return true;
            out.write("\n");
            out.write("                                        </div>\n");
            out.write("                                    </div>\n");
            out.write("                                  \n");
            out.write("                                    <div class=\"form-group\">\n");
            out.write("                                        <div class=\"col-sm-12\">\n");
            out.write("                                            <input type=\"submit\" value=\"Update Task\" class=\"btn btn-success\">\n");
            out.write("                                        </div>\n");
            out.write("                                    </div>\n");
            out.write("                                    ");
            if (_jspx_meth_todo_005fhidden_005f0(_jspx_th_todo_005fform_005f0, _jspx_page_context, _jspx_push_body_count_todo_005fform_005f0))
              return true;
            out.write("\n");
            out.write("                                    \n");
            out.write("                                ");
            int evalDoAfterBody = _jspx_th_todo_005fform_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_todo_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_todo_005fform_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_todo_005fform_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_todo_005fform_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005ftodo_005fform_0026_005fmethod_005fcommandName_005fclass_005faction.reuse(_jspx_th_todo_005fform_005f0);
      _jspx_th_todo_005fform_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_todo_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_todo_005fform_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_todo_005finput_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_todo_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_todo_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  todo:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_todo_005finput_005f0 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_todo_005finput_005f0_reused = false;
    try {
      _jspx_th_todo_005finput_005f0.setPageContext(_jspx_page_context);
      _jspx_th_todo_005finput_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_todo_005fform_005f0);
      // /taskUpdateForm.jsp(167,44) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005finput_005f0.setPath("title");
      // /taskUpdateForm.jsp(167,44) name = maxlength type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005finput_005f0.setMaxlength("10");
      // /taskUpdateForm.jsp(167,44) null
      _jspx_th_todo_005finput_005f0.setDynamicAttribute(null, "minlength", "3");
      // /taskUpdateForm.jsp(167,44) null
      _jspx_th_todo_005finput_005f0.setDynamicAttribute(null, "type", "text");
      // /taskUpdateForm.jsp(167,44) null
      _jspx_th_todo_005finput_005f0.setDynamicAttribute(null, "class", "form-control form-control-line");
      int[] _jspx_push_body_count_todo_005finput_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_todo_005finput_005f0 = _jspx_th_todo_005finput_005f0.doStartTag();
        if (_jspx_th_todo_005finput_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_todo_005finput_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_todo_005finput_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_todo_005finput_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.reuse(_jspx_th_todo_005finput_005f0);
      _jspx_th_todo_005finput_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_todo_005finput_005f0, _jsp_getInstanceManager(), _jspx_th_todo_005finput_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_todo_005ftextarea_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_todo_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_todo_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  todo:textarea
    org.springframework.web.servlet.tags.form.TextareaTag _jspx_th_todo_005ftextarea_005f0 = (org.springframework.web.servlet.tags.form.TextareaTag) _005fjspx_005ftagPool_005ftodo_005ftextarea_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.get(org.springframework.web.servlet.tags.form.TextareaTag.class);
    boolean _jspx_th_todo_005ftextarea_005f0_reused = false;
    try {
      _jspx_th_todo_005ftextarea_005f0.setPageContext(_jspx_page_context);
      _jspx_th_todo_005ftextarea_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_todo_005fform_005f0);
      // /taskUpdateForm.jsp(173,44) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005ftextarea_005f0.setPath("description");
      // /taskUpdateForm.jsp(173,44) null
      _jspx_th_todo_005ftextarea_005f0.setDynamicAttribute(null, "minlength", "5");
      // /taskUpdateForm.jsp(173,44) null
      _jspx_th_todo_005ftextarea_005f0.setDynamicAttribute(null, "maxlength", "30");
      // /taskUpdateForm.jsp(173,44) null
      _jspx_th_todo_005ftextarea_005f0.setDynamicAttribute(null, "type", "text");
      // /taskUpdateForm.jsp(173,44) null
      _jspx_th_todo_005ftextarea_005f0.setDynamicAttribute(null, "class", "form-control form-control-line");
      int[] _jspx_push_body_count_todo_005ftextarea_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_todo_005ftextarea_005f0 = _jspx_th_todo_005ftextarea_005f0.doStartTag();
        if (_jspx_th_todo_005ftextarea_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_todo_005ftextarea_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_todo_005ftextarea_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_todo_005ftextarea_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005ftodo_005ftextarea_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.reuse(_jspx_th_todo_005ftextarea_005f0);
      _jspx_th_todo_005ftextarea_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_todo_005ftextarea_005f0, _jsp_getInstanceManager(), _jspx_th_todo_005ftextarea_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_todo_005finput_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_todo_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_todo_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  todo:input
    org.springframework.web.servlet.tags.form.InputTag _jspx_th_todo_005finput_005f1 = (org.springframework.web.servlet.tags.form.InputTag) _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fmin_005fmax_005fclass_005fnobody.get(org.springframework.web.servlet.tags.form.InputTag.class);
    boolean _jspx_th_todo_005finput_005f1_reused = false;
    try {
      _jspx_th_todo_005finput_005f1.setPageContext(_jspx_page_context);
      _jspx_th_todo_005finput_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_todo_005fform_005f0);
      // /taskUpdateForm.jsp(179,44) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005finput_005f1.setPath("targetDate");
      // /taskUpdateForm.jsp(179,44) null
      _jspx_th_todo_005finput_005f1.setDynamicAttribute(null, "min", "2020-11-06");
      // /taskUpdateForm.jsp(179,44) null
      _jspx_th_todo_005finput_005f1.setDynamicAttribute(null, "max", "2030-01-01");
      // /taskUpdateForm.jsp(179,44) null
      _jspx_th_todo_005finput_005f1.setDynamicAttribute(null, "type", "date");
      // /taskUpdateForm.jsp(179,44) null
      _jspx_th_todo_005finput_005f1.setDynamicAttribute(null, "class", "form-control form-control-line");
      int[] _jspx_push_body_count_todo_005finput_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_todo_005finput_005f1 = _jspx_th_todo_005finput_005f1.doStartTag();
        if (_jspx_th_todo_005finput_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_todo_005finput_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_todo_005finput_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_todo_005finput_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005ftodo_005finput_0026_005ftype_005fpath_005fmin_005fmax_005fclass_005fnobody.reuse(_jspx_th_todo_005finput_005f1);
      _jspx_th_todo_005finput_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_todo_005finput_005f1, _jsp_getInstanceManager(), _jspx_th_todo_005finput_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_todo_005ftextarea_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_todo_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_todo_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  todo:textarea
    org.springframework.web.servlet.tags.form.TextareaTag _jspx_th_todo_005ftextarea_005f1 = (org.springframework.web.servlet.tags.form.TextareaTag) _005fjspx_005ftagPool_005ftodo_005ftextarea_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.get(org.springframework.web.servlet.tags.form.TextareaTag.class);
    boolean _jspx_th_todo_005ftextarea_005f1_reused = false;
    try {
      _jspx_th_todo_005ftextarea_005f1.setPageContext(_jspx_page_context);
      _jspx_th_todo_005ftextarea_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_todo_005fform_005f0);
      // /taskUpdateForm.jsp(185,44) null
      _jspx_th_todo_005ftextarea_005f1.setDynamicAttribute(null, "maxlength", "30");
      // /taskUpdateForm.jsp(185,44) null
      _jspx_th_todo_005ftextarea_005f1.setDynamicAttribute(null, "minlength", "5");
      // /taskUpdateForm.jsp(185,44) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005ftextarea_005f1.setPath("comment");
      // /taskUpdateForm.jsp(185,44) null
      _jspx_th_todo_005ftextarea_005f1.setDynamicAttribute(null, "type", "text");
      // /taskUpdateForm.jsp(185,44) null
      _jspx_th_todo_005ftextarea_005f1.setDynamicAttribute(null, "class", "form-control form-control-line");
      int[] _jspx_push_body_count_todo_005ftextarea_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_todo_005ftextarea_005f1 = _jspx_th_todo_005ftextarea_005f1.doStartTag();
        if (_jspx_th_todo_005ftextarea_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_todo_005ftextarea_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_todo_005ftextarea_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_todo_005ftextarea_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005ftodo_005ftextarea_0026_005ftype_005fpath_005fminlength_005fmaxlength_005fclass_005fnobody.reuse(_jspx_th_todo_005ftextarea_005f1);
      _jspx_th_todo_005ftextarea_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_todo_005ftextarea_005f1, _jsp_getInstanceManager(), _jspx_th_todo_005ftextarea_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_todo_005fhidden_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_todo_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_todo_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  todo:hidden
    org.springframework.web.servlet.tags.form.HiddenInputTag _jspx_th_todo_005fhidden_005f0 = (org.springframework.web.servlet.tags.form.HiddenInputTag) _005fjspx_005ftagPool_005ftodo_005fhidden_0026_005fpath_005fnobody.get(org.springframework.web.servlet.tags.form.HiddenInputTag.class);
    boolean _jspx_th_todo_005fhidden_005f0_reused = false;
    try {
      _jspx_th_todo_005fhidden_005f0.setPageContext(_jspx_page_context);
      _jspx_th_todo_005fhidden_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_todo_005fform_005f0);
      // /taskUpdateForm.jsp(194,36) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_todo_005fhidden_005f0.setPath("taskId");
      int[] _jspx_push_body_count_todo_005fhidden_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_todo_005fhidden_005f0 = _jspx_th_todo_005fhidden_005f0.doStartTag();
        if (_jspx_th_todo_005fhidden_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_todo_005fhidden_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_todo_005fhidden_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_todo_005fhidden_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005ftodo_005fhidden_0026_005fpath_005fnobody.reuse(_jspx_th_todo_005fhidden_005f0);
      _jspx_th_todo_005fhidden_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_todo_005fhidden_005f0, _jsp_getInstanceManager(), _jspx_th_todo_005fhidden_005f0_reused);
    }
    return false;
  }
}
