using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Properties
{
    class Program
    {

        //Main Methods
        static void Main1(string[] args)
        {
            Class1 o = new Class1();
            o.Setx(101);
            Console.WriteLine(o.Getx());
        }

        static void Main(string[] args)
        {
            Class2 o = new Class2();
            o.X = 115; //set
            Console.WriteLine(o.X); //get

            //o.P1="a";
            Console.WriteLine("p1:" o.P1);
            o.P4 = 17;
            Console.WriteLine("p4:" o.P4);


            //o.P5 = 15;  //accessor is inaccesible
            Console.WriteLine("p5:" +o.P5);

        }


    }



    //Classes
    public class Class1
    {
        public int i; //field
        private int x;

        public void Setx(int value)
        {
            if (value < 100)
                x = value;
            else
                //throw an exception
                Console.WriteLine("invalid value for x");
        }
        public int Getx()
        {
            return x;
        }

    }

        public class Class2 {

            private int x;
            public int X {
                set {
                    //value is the rhs of o.X = 10;
                    if (value < 100)
                        x = value;
                    else
                        Console.WriteLine("invalid value for x");
                }
                get {
                    return x;
                }
            }

            private string p1 = "abc";
            public string P1//readonly property
            {
                get {
                return p1; 
                }
            }

            private int p2;
            public int P2
            {
                    set {
                        p2 = value;
                    }

                    get {
                        return p2;
                    }
            }

            public int P3; //not sugested use as below

            //automatic property -- use it when there are no validations
            //get and set code is generated by compiler
            //private variable is generated by compiler
            public int P4 { get; set; }

            private int p5;
            //only one of get/set can have a property accessor
            //you can only reduce access, not increase it
            public int P5 {
                 //property accessor
                private set {
                        p5 = value;            
                    }

                    get {
                        return p5;            
                    }
            }

    }
            

    
    
    

}
